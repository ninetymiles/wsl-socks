plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}

group 'com.rex'
version '1.5'

application {
    mainClassName = 'com.rex.proxy.Wsl'
}

test {
    testLogging {
        //showStandardStreams = true
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes("Implementation-Title": project.name)
        attributes("Implementation-Version": project.version)
        attributes("Main-Class": application.mainClassName)
    }
}

publishing {
    publications {
        release(MavenPublication) { publication ->
            artifactId = 'wsl-socks'
            artifact project.tasks.create("generateSourceJarFor${name.capitalize()}Publication", Jar) {
                group "publishing"
                classifier "sources"
                from sourceSets.main.allJava
            }
            from components.java
        }
    }
}

repositories {
    google()
    jcenter()
    mavenCentral()
}

//// Compile with arguments -Xlint:unchecked -Xlint:deprecation
//tasks.withType(JavaCompile) {
//    options.compilerArgs << '-Xlint:unchecked'
//    options.deprecation = true
//}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.25'
    implementation 'ch.qos.logback:logback-core:1.2.3'
    implementation 'ch.qos.logback:logback-classic:1.2.3'

    implementation 'com.google.code.gson:gson:2.8.6'
    implementation 'io.netty:netty-handler:4.1.56.Final'
    implementation 'io.netty:netty-codec-http:4.1.56.Final'
    implementation 'io.netty:netty-codec-socks:4.1.56.Final'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation 'com.squareup.okhttp3:okhttp:4.7.2'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.7.2'
}
