plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}

group 'com.rex'
version '1.5-SNAPSHOT'

application {
    mainClass = 'com.rex.proxy.Wsl'
}

test {
    testLogging {
        //showStandardStreams = true
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes("Implementation-Title": project.name)
        attributes("Implementation-Version": project.version)
        attributes("Main-Class": application.mainClass)
    }
}

java {
    withSourcesJar()
    //withJavadocJar()
}

publishing {
    publications {
        release(MavenPublication) { publication ->
            artifactId = 'wsl-socks'
            from components.java
        }
    }
}

repositories {
    //google()
    mavenCentral()
}

//// Compile with arguments -Xlint:unchecked -Xlint:deprecation
//tasks.withType(JavaCompile) {
//    options.compilerArgs << '-Xlint:unchecked'
//    options.deprecation = true
//}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.36'
    implementation 'ch.qos.logback:logback-core:1.2.12'
    implementation 'ch.qos.logback:logback-classic:1.2.12'

    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'io.netty:netty-handler:4.1.100.Final'
    implementation 'io.netty:netty-codec-http:4.1.100.Final'
    implementation 'io.netty:netty-codec-socks:4.1.100.Final'

    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.mockito:mockito-core:3.3.3'
    testImplementation(platform("com.squareup.okhttp3:okhttp-bom:4.12.0"))
    testImplementation("com.squareup.okhttp3:okhttp")
    testImplementation("com.squareup.okhttp3:okhttp-tls")
    testImplementation("com.squareup.okhttp3:mockwebserver")

    // Use BouncyCastle provider to generate self-signed certificate
    //testImplementation 'org.bouncycastle:bcpkix-jdk15to18:1.75'
    //testImplementation 'org.bouncycastle:bcprov-jdk15to18:1.75'
    //testImplementation 'org.bouncycastle:bcutil-jdk15to18:1.75'
}
